// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// Distance
double Distance(arma::vec x, arma::vec center, arma::mat cov);
RcppExport SEXP _KemansToGmm_Distance(SEXP xSEXP, SEXP centerSEXP, SEXP covSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type center(centerSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type cov(covSEXP);
    rcpp_result_gen = Rcpp::wrap(Distance(x, center, cov));
    return rcpp_result_gen;
END_RCPP
}
// sampledensity
double sampledensity(arma::vec x, arma::vec mean, arma::mat sigma);
RcppExport SEXP _KemansToGmm_sampledensity(SEXP xSEXP, SEXP meanSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(sampledensity(x, mean, sigma));
    return rcpp_result_gen;
END_RCPP
}
// iteration_gmm
Rcpp::List iteration_gmm(int g, int n, int m, arma::mat samp);
RcppExport SEXP _KemansToGmm_iteration_gmm(SEXP gSEXP, SEXP nSEXP, SEXP mSEXP, SEXP sampSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type g(gSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type samp(sampSEXP);
    rcpp_result_gen = Rcpp::wrap(iteration_gmm(g, n, m, samp));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_KemansToGmm_Distance", (DL_FUNC) &_KemansToGmm_Distance, 3},
    {"_KemansToGmm_sampledensity", (DL_FUNC) &_KemansToGmm_sampledensity, 3},
    {"_KemansToGmm_iteration_gmm", (DL_FUNC) &_KemansToGmm_iteration_gmm, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_KemansToGmm(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
